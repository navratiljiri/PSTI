#První cvičení příklady z PDF
x <- c(4,12)
(first <- log(x^2, base = 2) + log(x-1, base = 3))
(second <- (x^2+5*x^3-2*x^4)/(3-x+5*sqrt(x)))
third <- (sin^2(x) + cos^2(x))
(fourth <- abs(3*x-15 / 2*x^2-1))
(fiveth <- (3*x-5*(x^2-6)) / (7+3*(x^3-1)*(x^2+2)))
#První cvičení příklady z PDF
x <- c(4,12)
(first <- log(x^2, base = 2) + log(x-1, base = 3))
(second <- (x^2+5*x^3-2*x^4)/(3-x+5*sqrt(x)))
third <- (sin(x)^2 + cos(x)^2)
(fourth <- abs(3*x-15 / 2*x^2-1))
(fiveth <- (3*x-5*(x^2-6)) / (7+3*(x^3-1)*(x^2+2)))
(fourth <- abs(3*x-15 / (2*x^2)-1))
(fiveth <- (3*x-5*(x^2-6)) / (7+3*(x^3-1)*(x^2+2)))
#První cvičení příklady z PDF
x <- c(4,12)
(first <- log(x^2, base = 2) + log(x-1, base = 3))
(second <- (x^2+5*x^3-2*x^4)/(3-x+5*sqrt(x)))
third <- (sin(x)^2 + cos(x)^2)
(fourth <- abs(3*x-15 / (2*x^2)-1))
(fiveth <- (3*x-5*(x^2-6)) / (7+3*(x^3-1)*(x^2+2)))
#První cvičení příklady z PDF
x <- c(4,12)
(first <- log(x^2, base = 2) + log(x-1, base = 3))
(second <- (x^2+5*x^3-2*x^4)/(3-x+5*sqrt(x)))
third <- (sin(x)^2 + cos(x)^2)
(fourth <- abs((3*x)-15 / (2*x^2)-1))
(fiveth <- (3*x-5*(x^2-6)) / (7+3*(x^3-1)*(x^2+2)))
install.packages("pracma")
library(pracma)
log(9,base = 3)   # log(9) o zakladu 3; parametry -> cislo, zaklad
pi         # cislo pi
factorial(6)   # faktorial daneho cisla
choose(10,5)  # kombinacni cislo "10 nad 5"
# gonimetricke funkce:
sin(pi*1/6)
cos(pi*1/3)
cos(0)
tan(pi*1/4)
# pozor:
log(-8)
0/0
8/0
# jak ziskat napovedu k funkcim:
?log
?round
# ne vsechny funkce jsou v zakladnich baliccich (packages/libraries)
# existuje spousta funkci v doplnkovych baliccich
library(pracma)
pracma::cot(pi*0.7)  # volame-li funkci z konkretniho balicku, je dobre ji volat i s odkazem na knihovnu
x <- 12  # ulozime promennou (zobrazi se ve workspace); nevypise se v console
x        # vypiseme hodnotu "x" v console
(y<-9)   # ulozime a zaroven vypiseme
# pozor:
y   # mame ulozene
Y   # nemame ulozene
# opet muzeme pouzivat ruzne matematicke operace:
x+y; x*y  # pomoci ; muzeme oddelovat vice prikazu na jednom radku (vhodne spis pro jednodussi prikazy)
# Typy promennych v R:
a <- 10       # numeric (ciselne)
b <- "text"   # character (textove, piseme do "" nebo '')
d <- TRUE     # logical (logicke; pouze hodnoty TRUE/FALSE)
e <- 4+5i     # complex (komplexni); vzdy potreba psat "i" s cislem (samotne "i" Rko defaultne nebere jako komplexni prvek)
# chybejici hodnota: NA
f <- NA      # muzeme sami zakodovat (pokud vime, ze nejaka hodnota chybi); v pripade nahravani dat si s tim R vetsinou poradi a NA dosadi
# jakakoliv operace s NA opet vrati NA
5+NA
# funkce class() -> zjistime typ promenne
class(a)
class(d)
# dalsi uzitecne prikazy:
ls()   # vypise vsechny ulozene promenne ve workspace
rm(a,b,c,d,f,y,e)   # vymaze vsechny promenne, ktere napiseme do zavorky
rm(list=ls())  # vymaze UPLNE VSECHNY ulozene promenne
# vytvoreni vektoru: funkce c(), prvky oddelujeme carkou
vec <- c(1,3,5,7,9,3,45,0,8)
vec    # zobrazen jako radkovy vektor, ale "povahou" je SLOUPCOVY
# co kdyz bude ve vektoru chybejici hodnota NA:
vec2 <- c(5,9,10,NA,40,3,9)
# jak najit hodnotu NA -> pomoci funkce is.na()
is.na(vec2)   # hodnota TRUE oznaci NA
# v dlouhem vektoru je vysledek TRUE/FALSE neprehledny -> pomuze funkce which()
which(is.na(vec2))  # pomoci funkce which() navic zjistime presnou pozici NA ve vektoru
# co kdybychom chteli NA nahradit nejakou hodnotou (napr. 1000):
vec2[is.na(vec2)] <- 1000
vec2
# ukazky dalsich moznych hodnot ve vektoru -> character, logical:
vec3 <- c("A","B","C","D","E")
vec4 <- c(TRUE,TRUE,FALSE,TRUE,FALSE)
# funkce class() funguje i u vektoru:
class(vec)
class(vec2)
class(vec3)
class(vec4)
# co se stane, kdyz do vektoru vlozime hodnoty ruznych typu:
pokusny.vektor <- c(3,56,"slovo",10,TRUE)
pokusny.vektor  # "vyhral" typ character -> vsechny prvky (i cisla a hodnota TRUE) jsou typu character
# length() -> vypise delku vektoru (pocet prvku)
length(vec)
# funkce c() slouzi i ke spojeni 2 a vice vektoru do jednoho
v1 <- c(vec,vec2)
v1
# intersect() -> najde spolecne prvky zadanych vektoru
v2 <- intersect(vec,vec2)
v2
# unique() -> funkce zobrazi kazdy prvek vstupniho vektoru prave jednou
vec2
# a) as.character() -> zmeni hodnoty na textovy retezec
cisla <- seq(1:15)
cisla
as.character(cisla)
# b) as.numeric() -> zmeni hodnoty na cisla
cisla2 <- c("34","45","23","12","0")
cisla2
as.numeric(cisla2)
logicke <- c(T,T,F,T,F,T,F,F,T)
as.numeric(logicke)
# ne vsechno bude samozrejme fungovat :-)
as.numeric(c("neco_napiseme"))
# c) as.logical() -> prevede na logicke hodnoty TRUE/FALSE
cisla3 <- c(2,4,5,1,0,6,1,0)
as.logical(cisla3)
# d) as.factor() -> z promenne vytvori faktor (pouzitelne pro numericke i textove promenne)
sk1 <- rep(c(1,2,3),times = 5)
sk1
as.factor(sk1)
sk2 <- c("audi","skoda","vw","skoda","vw","audi","audi","skoda","skoda","vw","skoda")
# b) as.numeric() -> zmeni hodnoty na cisla
cisla2 <- c("34","45","23","12","0")
cisla2
as.numeric(cisla2)
logicke <- c(T,T,F,T,F,T,F,F,T)
as.numeric(logicke)
# ne vsechno bude samozrejme fungovat :-)
as.numeric(c("neco_napiseme"))
# c) as.logical() -> prevede na logicke hodnoty TRUE/FALSE
cisla3 <- c(2,4,5,1,0,6,1,0)
as.logical(cisla3)
# d) as.factor() -> z promenne vytvori faktor (pouzitelne pro numericke i textove promenne)
sk1 <- rep(c(1,2,3),times = 5)
sk1
as.factor(sk1)
sk2 <- c("audi","skoda","vw","skoda","vw","audi","audi","skoda","skoda","vw","skoda")
as.factor(sk2)
sk2 <- c("audi","skoda","vw","skoda","vw","audi","audi","skoda","skoda","vw","skoda", "bruh")
as.factor(sk2)
sk2 <- c("audi","skoda","vw","skoda","vw","audi","audi","skoda","skoda","vw","skoda")
as.factor(sk2)
# pouzijeme spatny operator -> "scitame" hodnoty T a F
logicke[4] + logicke[5]
logicke
# pouzijeme spatny operator -> "scitame" hodnoty T a F
logicke[4] + logicke[5]
logicke
# opet pouzijeme spatny operator -> logicky pro ciselne hodnoty
cisla3[2] & cisla3[6]
cisla3
setwd("C:/Develop/Skola/PSTI/cviceni_3")
library(readxl)
hodnoty<- read_excel("Cv3.xlsx")
prumer <- mean(hodnoty)
prumer <- mean(hodnoty)
## a) NEZALEZI na poradi:
## Kombinace
# funkce choose(n,k) = kombinacni cislo "n nad k"
# n = z kolika vybirame
# k = kolik cisel vybirame
?choose
prumer <- mean(hodnoty)
View(hodnoty)
hodnoty<- read_excel("Cv3.xlsx", col_names = X)
prumer <- mean(hodnoty)
hodnoty<- read_excel("Cv3.xlsx", col_names = X)
head(dX)
################################################################################
## KIKM/PSTI: cviceni 3 - Kombinatorika + opakovani "rozsahla data"
head(dX)
head(hodnoty)
prumer <- mean(head(hodnoty))
summary(head(hodnoty))
rozptyl <- var(head(hodnoty))
rozptyl <- var(vystup)
vystup <- read_excel("Cv3.xlsx", col_names = X)
library(readxl)
vystup <- read_excel("Cv3.xlsx", col_names = X)
hodnoty <- head(hodnoty)
summary(hodnoty)
rozptyl <- var(hodnoty)
smerodatnaOdchylkaCislo <- sd(hodnoty)
View(hodnoty)
View(hodnoty)
hodnoty <- head(hodnoty)
vystup <- read_excel("Cv3.xlsx", col_names = X)
library(readxl)
vystup <- read_excel("Cv3.xlsx", col_names = X)
hodnoty <- head(vystup)
vystup <- read_excel("Cv3.xlsx", col_names = X)
hodnoty <- head(vystup)
library(readxl)
vystup <- read_excel("Cv3.xlsx", col_names = X)
hodnoty <- head(vystup)
rozptyl <- var(hodnoty)
smerodatnaOdchylkaCislo <- sd(hodnoty)
dx <- read_excel("Cv3.xlsx", col_names = X)
hodnoty <- dx
rozptyl <- var(hodnoty)
smerodatnaOdchylkaCislo <- sd(hodnoty)
## a) NEZALEZI na poradi:
## Kombinace
# funkce choose(n,k) = kombinacni cislo "n nad k"
# n = z kolika vybirame
# k = kolik cisel vybirame
?choose
library(readxl)
dx <- read_excel("Cv3.xlsx", col_names = X)
hodnoty <- dx
rozptyl <- var(hodnoty)
smerodatnaOdchylkaCislo <- sd(hodnoty)
dx <- read_excel("Cv3.xlsx", col_names = X)
View(hodnoty)
rm(list=ls())
library(readxl)
dx <- read_excel("Cv3.xlsx", col_names = X)
dx <- read_excel("Cv3.xls", col_names = X)
d <- read_excel("Cv3.xlsx")
dx <- head(d)
View(dx)
rm(list=ls())
library(readxl)
d <- read_excel("Cv3.xlsx",col_names = x)
dx <- read_excel("Cv3.xlsx")
View(dx)
rozptyl <- var(dx)
smerodatnaOdchylkaCislo <- sd(dx)
dx <- read_excel("Cv3.xlsx", col_names = A)
dx <- read_excel("Cv3.xlsx", col_types = double)
dx <- read_excel("Cv3.xlsx")
rozptyl <- var(dx)
smerodatnaOdchylkaCislo <- sd(dx)
summary(dx)
View(rozptyl)
rozptyl <- var(dx)
smerodatnaOdchylkaCislo <- sd(dx)
rozptyl <- var(dx$X)
smerodatnaOdchylkaCislo <- sd(dx$X)
N <- nrow(dx)
N <- nrow(dx$X)
N <- nrow(dx)
K <- 1 + 3.3*log(N, base = 10)
vr <- max(df$X) - min(df$X)
vr <- max(dx$X) - min(dx$X)
sirka <- vr/K
K2 <- round(K)
sirka2 <- 360
dx <- read_excel("Cv3.xlsx")
rozptyl <- var(dx$X)
smerodatnaOdchylkaCislo <- sd(dx$X)
rm(list=ls())
library(readxl)
library(readxl)
dx <- read_excel("Cv3.xlsx")
rozptyl <- var(dx$X)
smerodatnaOdchylkaCislo <- sd(dx$X)
prumer <- mean(dx$X)
rozptyl <- var(dx$X)
rm(list=ls())
library(readxl)
dx <- read_excel("Cv3.xlsx")
rozptyl <- var(dx$X)
smerodatnaOdchylkaCislo <- sd(dx$X)
prumer <- mean(dx$X)
smodch <- sd(dx$X)
z <- (dx$X-prumer)/smerodatnaOdchylkaCislo
z3 <- z^3
z4 <- z^4
sikmost <- sum(z3)/N
N <- 1 + 3.3*log(N, base = 10)
# Stugersovo pravidlo
Stugers <- nrow(dx)
N <- 1 + 3.3*log(N, base = 10)
z3 <- z^3
z4 <- z^4
sikmost <- sum(z3)/N
N <- 1 + 3.3*log(N, base = 10)
rozptyl <- var(dx$X)
smerodatnaOdchylkaCislo <- sd(dx$X)
prumer <- mean(dx$X)
z <- (dx$X-prumer)/smerodatnaOdchylkaCislo
# Stugersovo pravidlo
Stugers <- nrow(dx)
N <- 1 + 3.3*log(N, base = 10)
dx <- read_excel("Cv3.xlsx", col_names = T)
rozptyl <- var(dx$X)
smerodatnaOdchylkaCislo <- sd(dx$X)
prumer <- mean(dx$X)
z <- (dx$X-prumer)/smerodatnaOdchylkaCislo
z3 <- z^3
z4 <- z^4
sikmost <- sum(z3)/N
spicatost <- sum(z4)/N
radky <- nrow(dx)
summary(dx)
# Stugersovo pravidlo
K <- 1 + 3.3*log(radky, base = 10)
sirka2 <- ceiling(sirka)
#2. šířka intervalů
vr <- max(dx$X) - min(dx$X)
sirka <- vr/K
sirka2 <- ceiling(sirka)
A1 <- floor(min(dx$X))
A1 <- 0
sirka2 <- 70
K2 <- round(K)
index <- 1:K2
A1 <- floor(min(dx$X))
A1 <- 0
intervaly <- cut(dx$X,
breaks = seq(A1, K2*sirka2, by = sirka2),
labels = paste0(seq(A1, (K2-1)*sirka2, by = sirka2),"-",seq(A1+sirka2, K2*sirka2, by = sirka2)))
# ukazka pouziti funkce choose()
n <- 20
k <- 5
choose(n,k)         # kombinace BEZ opakovani
choose((n+k-1),k)   # kombinace s opakovanim
choose(30,2)
# dejepis
choose(30+2-1,2)
# dejepis
choose((30+2-1),2)
# zemepis
choose((25+2-1),2)
# literatura
choose((20),2)
celkem <- dejepis*zemepis*literatura
# dejepis
dejepis <- choose((30+2-1),2)
# zemepis
zemepis <- choose((25+2-1),2)
# literatura
literatura <- choose((20),2)
celkem <- dejepis*zemepis*literatura
rm(list=ls())
# dejepis
dejepis <- choose((30+2-1),2)
# zemepis
zemepis <- choose((25+2-1),2)
# literatura
literatura <- choose((20),2)
celkem <- dejepis*zemepis*literatura
celkem
# dejepis
dejepis <- choose((30),2)
# zemepis
zemepis <- choose((25),2)
# literatura
literatura <- choose((20),2)
celkem <- dejepis*zemepis*literatura
celkem
# dejepis
dejepis <- choose(30,2)
# zemepis
zemepis <- choose(25,2)
# literatura
literatura <- choose(20,2)
celkem <- dejepis*zemepis*literatura
celkem
# literatura
literatura <- choose(20,1)
celkem <- dejepis*zemepis*literatura
celkem
prsten <- choose(10+3-1,3) - 1
n = 10
k = 3
prsten <- choose(n-1,k) - 1
prsten <- choose(n-1,k) - 1
prsten <- choose(n+k-1,k) - 1
n = 3
k = 3
prsten <- choose(n+k-1,k) - 1
zpusoby <- V(4,10)
n <- 10
k <- 4
zpusoby <- V(4,10)
zpusoby <- 10!/(10-4)!
zpusoby <- factorial(n)/factorial(n-k)
muziP <- factorial(muzi)/factorial(muzi-2) * factorial(8)/factorial(8-2)
muzi = 6
zeny = 4
muziP <- factorial(muzi)/factorial(muzi-2) * factorial(8)/factorial(8-2)
zenyP <- factorial(zeny)/factorial(zeny-2) * factorial(8)/factorial(8-2)
variace <- factorial(celkem)/factorial(celkem-4) - muziP - zenyP
muzi = 6
zeny = 4
celkem <- 10
muziP <- factorial(muzi)/factorial(muzi-2) * factorial(8)/factorial(8-2)
zenyP <- factorial(zeny)/factorial(zeny-2) * factorial(8)/factorial(8-2)
variace <- factorial(celkem)/factorial(celkem-4) - muziP - zenyP
28^4
28^3
spz <- 10^4 + 28^3
spz <- 28^4 + 28^3
spz <- 10^4 + 28^3
spz <- 10^4 * 28^3
zpusoby <- factorial(devcata) * factorial(chlapci)
devcata <- 15
chlapci <- 13
zpusoby <- factorial(devcata) * factorial(chlapci)
zpusoby2 <- factorial(devcata) * factorial(chlapci) * 2
pruhy <- 3
vlajka <- factorial(pruhy) / (factorial(2) * factorial(1))
